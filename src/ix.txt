/*
Faltan detalles del índice de SQLQuery3.sql - JPSANCHEZ.master (sa (53))
El procesador de consultas estima que la implementación del siguiente índice podría mejorar el costo de la consulta en un 97.5356%.
*/


USE [BIZ_FAC]
GO
CREATE NONCLUSTERED INDEX [IX_TB_FAC_FACTURA_16]
ON [dbo].[TB_FAC_FACTURA] ([CCI_TIPOCMPR],[CES_FACTURA],[DFM_FECHA])
INCLUDE ([CCI_CLIENTE],[DFX_REG_FECHA],[CCI_USUARIO],[CES_FE],[CCI_CLAVE_ACCESO],[ID_LOG_FE])
GO

drop index IX_TB_FAC_FACTURA_16
ON [dbo].[TB_FAC_FACTURA]


USE [BIZ_FAC]
GO
CREATE NONCLUSTERED INDEX [IX_TB_FAC_FACTURA_17]
ON [dbo].[TB_FAC_FACTURA] ([CCI_EMPRESA],[CCI_TIPOCMPR],[CCI_CLIENTE],[CES_FACTURA],[DFM_FECHA])
INCLUDE ([DFX_REG_FECHA],[CCI_USUARIO],[CES_FE],[CCI_CLAVE_ACCESO],[ID_LOG_FE])
GO

drop index IX_TB_FAC_FACTURA_17
ON [dbo].[TB_FAC_FACTURA]


USE [BIZ_FAC]
GO
CREATE NONCLUSTERED INDEX [IX_TB_FAC_FACTURA_18]
ON [dbo].[TB_FAC_FACTURA] ([CCI_TIPOCMPR],[CES_FACTURA],[CCI_EMPRESA])
INCLUDE ([CCI_CLIENTE],[DFM_FECHA],[DFX_REG_FECHA],[CCI_USUARIO],[CES_FE],[CCI_CLAVE_ACCESO],[ID_LOG_FE])
GO

drop index IX_TB_FAC_FACTURA_18
ON [dbo].[TB_FAC_FACTURA]

create nonclustered index IX_TB_FAC_FE_PARAMETROS_01
on dbo.TB_FAC_FE_PARAMETROS(cci_empresa, DFM_FECHA_INICIO)
include(AMBIENTE)
go 

drop index IX_TB_FAC_FE_PARAMETROS_01
on dbo.TB_FAC_FE_PARAMETROS


use BIZ_GEN
go

create nonclustered index IX_TB_GEN_CLIPROV_02
ON dbo.TB_GEN_CLIPROV(cci_empresa, cci_cliprov)
include(cno_cliprov)

drop index IX_TB_GEN_CLIPROV_02
ON dbo.TB_GEN_CLIPROV


USE [BIZ_CNT]
GO
CREATE NONCLUSTERED INDEX [IX_TB_BAN_PRO_CMPR_RETENCION_01]
ON [dbo].[TB_BAN_PRO_CMPR_RETENCION] ([CCI_EMPRESA])
INCLUDE ([CCI_SUCURSAL],[CMP_CODIGO],[NCI_RETENCION],[DFM_RETENCION],[DFM_PROCESO],[CCI_USUARIO],[CES_FE],[CCI_CLAVE_ACCESO],[ID_LOG_FE])
GO

drop index IX_TB_BAN_PRO_CMPR_RETENCION_01]
ON [dbo].[TB_BAN_PRO_CMPR_RETENCION]


CREATE NONCLUSTERED INDEX [IX_TB_BAN_PRO_CMPR_RETENCION_02]
ON [dbo].[TB_BAN_PRO_CMPR_RETENCION] ([CCI_EMPRESA],[CCI_SUCURSAL],[CMP_CODIGO],[DFM_RETENCION])
INCLUDE ([NCI_RETENCION],[DFM_PROCESO],[CCI_USUARIO],[CES_FE],[CCI_CLAVE_ACCESO],[ID_LOG_FE])
GO

drop index IX_TB_BAN_PRO_CMPR_RETENCION_02
ON [dbo].[TB_BAN_PRO_CMPR_RETENCION]



use BIZ_FAC
go

ALTER view [dbo].[VI_FAC_FE_DOCUMENTOS]
AS
SELECT f.cci_empresa, 
(select cno_empresa from BIZ_GEN..tb_seg_empresa where CCI_EMPRESA = f.CCI_EMPRESA) as cno_empresa,
f.cci_sucursal, 
f.cci_cliente, 
f.cno_cliprov,
f.dfm_fecha,
f.cci_tipocmpr, 
case f.cci_tipocmpr when 'FAC' then 'FACTURA' when 'NC' then 'NOTA DE CREDITO' when 'RET' then 'RETENCION' when 'GUI' then 'GUIA' end as descripcion_cci_tipocmpr,
f.nci_documento,
f.id_log_fe,
f.cci_usuario,
f.dfx_reg_fecha,
f.ces_fe,
case f.ces_fe when 'P' then 'PENDIENTE' when 'G' then 'GENERADO' when 'F' then 'FIRMADO' when 'E' then 'ENVIADO' when 'A' then 'AUTORIZADO' when 'R' then 'RECHAZADO' end as descripcion_ces_fe,
f.cci_clave_acceso
FROM (  
	SELECT F.CCI_EMPRESA, 
			F.CCI_SUCURSAL, 
			F.CCI_CLIENTE, 
			c.cno_cliprov,
			F.DFM_FECHA,
			F.CCI_TIPOCMPR, 
			F.NCI_FACTURA AS NCI_DOCUMENTO,
			F.ID_LOG_FE,
			F.CCI_USUARIO,
			F.DFX_REG_FECHA,
			F.CES_FE,
			F.CCI_CLAVE_ACCESO,
			PFE.AMBIENTE
	FROM BIZ_FAC..TB_FAC_FACTURA F INNER JOIN BIZ_FAC..TB_FAC_FE_PARAMETROS PFE ON
	F.CCI_EMPRESA = PFE.CCI_EMPRESA	 INNER JOIN BIZ_GEN..TB_GEN_CLIPROV C with(forceseek) ON 
	F.CCI_EMPRESA = C.CCI_EMPRESA
	AND F.CCI_CLIENTE = C.CCI_CLIPROV
	WHERE f.CCI_EMPRESA != ''
	and F.CCI_TIPOCMPR = 'FAC'
	AND F.CES_FACTURA IS NULL
	and F.DFM_FECHA >= PFE.DFM_FECHA_INICIO
	and PFE.CCI_EMPRESA != ''

union

	SELECT F.CCI_EMPRESA, 
			F.CCI_SUCURSAL, 
			F.CCI_CLIENTE, 
			c.cno_cliprov,
			F.DFM_FECHA,
			F.CCI_TIPOCMPR, 
			F.NCI_FACTURA AS NCI_DOCUMENTO,
			F.ID_LOG_FE,
			F.CCI_USUARIO,
			F.DFX_REG_FECHA,
			F.CES_FE,
			F.CCI_CLAVE_ACCESO,
			PFE.AMBIENTE
	FROM BIZ_FAC..TB_FAC_FACTURA F INNER JOIN BIZ_FAC..TB_FAC_FE_PARAMETROS PFE ON
	F.CCI_EMPRESA = PFE.CCI_EMPRESA	 INNER JOIN BIZ_GEN..TB_GEN_CLIPROV C with(forceseek) ON 
	F.CCI_EMPRESA = C.CCI_EMPRESA
	AND F.CCI_CLIENTE = C.CCI_CLIPROV
	WHERE f.CCI_EMPRESA != ''
	and F.CCI_TIPOCMPR = 'NC'
	AND F.CES_FACTURA IS NULL
	and F.DFM_FECHA >= PFE.DFM_FECHA_INICIO
	and PFE.CCI_EMPRESA != ''

union

SELECT DISTINCT R.CCI_EMPRESA,
        R.CCI_SUCURSAL,
        CMPR.COD_PROV AS CCI_CLIENTE,
		c.cno_cliprov,
        R.DFM_RETENCION,
        'RET' AS CCI_TIPOCMPR,
        R.NCI_RETENCION AS NCI_DOCUMENTO,
        R.ID_LOG_FE,
        R.CCI_USUARIO,
        R.DFM_PROCESO,
        R.CES_FE,
        R.CCI_CLAVE_ACCESO,
		PFE.AMBIENTE
FROM BIZ_CNT..TB_BAN_PRO_CMPR CMPR WITH(NOLOCK) INNER JOIN BIZ_CNT..TB_BAN_PRO_CMPR_RETENCION R WITH(NOLOCK) ON
CMPR.CCI_EMPRESA = R.CCI_EMPRESA
AND CMPR.CCI_SUCURSAL = R.CCI_SUCURSAL
AND CMPR.CMP_CODIGO = R.CMP_CODIGO INNER JOIN BIZ_FAC..TB_FAC_FE_PARAMETROS PFE ON
		R.CCI_EMPRESA = PFE.CCI_EMPRESA INNER JOIN BIZ_GEN..TB_GEN_CLIPROV C with(forceseek) ON 
CMPR.CCI_EMPRESA = C.CCI_EMPRESA
AND CMPR.COD_PROV = C.CCI_CLIPROV
where r.CCI_EMPRESA != ''
and R.DFM_RETENCION >= PFE.DFM_FECHA_INICIO
and PFE.CCI_EMPRESA != ''

union

 SELECT R.CCI_EMPRESA,
        R.CCI_SUCURSAL,	
        R.CCI_CLIENTE,
		c.cno_cliprov,
        R.DFM_EMISION,
        'GUI' AS CCI_TIPOCMPR,
        R.NCI_GUIA AS NCI_DOCUMENTO,
        R.ID_LOG_FE,
        R.CCI_USUARIO,
        R.DFM_REGISTRO,
        R.CES_FE,
        R.CCI_CLAVE_ACCESO,
		PFE.AMBIENTE
FROM BIZ_INV_REP..TB_INV_GUIA_REMISION R INNER JOIN BIZ_FAC..TB_FAC_FE_PARAMETROS PFE ON
R.CCI_EMPRESA = PFE.CCI_EMPRESA INNER JOIN BIZ_GEN..TB_GEN_CLIPROV C with(forceseek) ON 
R.CCI_EMPRESA = C.CCI_EMPRESA
AND R.CCI_CLIENTE = C.CCI_CLIPROV
where PFE.CCI_EMPRESA != ''
and R.DFM_EMISION >= PFE.DFM_FECHA_INICIO
) F
GO

sql compare mas tiem evaluacion
http://codeskaters.blogspot.com/2015/02/red-gate-sql-prompt-extend-trial-period.html

correos php
https://stackoverflow.com/questions/47634630/smtp-error-could-not-connect-to-smtp-host-phpmailer-php/51064325

fa fa-home
fa fa-users
fa fa-user
fa fa-unlock-alt
fa fa-star
fa fa-key
fa fa-id-card
fa fa-shield
fa fa-money
fa fa-indent
fa fa-file-text-o
fa fa-money
fa fa-newspaper-o
fa fa-cog
fa fa-file-text

https://stackoverflow.com/questions/38425461/angular2-canactivate-calling-async-function
https://stackoverflow.com/questions/47759807/angular-4-guard-with-subscription
https://stackoverflow.com/questions/47210919/wait-for-http-inside-guard-on-angular-5
https://stackoverflow.com/questions/47759807/angular-4-guard-with-subscription

USE [FacturacionElectronica]
GO
/****** Object:  StoredProcedure [dbo].[SP_GEN_SESION]    Script Date: 15/01/2020 6:56:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ============================================================================
-- AUTHOR......: JUAN PABLO SANCHEZ
-- CREATE DATE.: 22-MAY-2019
-- VERSION.....: 1.0.01
-- DESCRIPTION.: PROCEDIMIENTO QUE SE ENCARGA DE MANEJAR TODO LO RELACIONADO
--               CON LA TABLA TB_GEN_SESIONES
-- MODIFICACION: 22-MAY-2019
-- COMENTARIOS.: COMENTARIOS ACERCA DE LA MODIFICACION DEL PROCEDIMIENTO
-- ============================================================================
-- PARAMETROS
-- @in_id_usuario.: CODIGO DEL USUARIO
-- @in_id_sesion.: CODIGO DE LA SESION
-- @in_ip.....: DIRECCION DE LA IP CON LA QUE SE GENERA LA SESION
-- @id_menu.: CODIGO DEL MENU
-- @in_usuario_ing_act: CODIGO DEL USUARIO QUE REALIZA EL INGRESO/ACTUALIZACION
-- @in_operacion.: OPERACION A SER EJECUTADA
-- ============================================================================

ALTER PROCEDURE [dbo].[SP_GEN_SESION]
(
	@in_id_usuario INT = NULL,
	@in_id_sesion INT = NULL,
	@in_ip VARCHAR(45) = NULL, 
	--@se_dispositivo	VARCHAR(50) = NULL,	
	@in_id_menu INT = NULL,
	@in_usuario_ing_act INT = NULL,
	@in_operacion VARCHAR(3)
)
AS

-- ============================================================================
-- VSI: VERIFICAR SESION INICIADA, VERIFICA SI EL USUARIO TIENE UNA SESION
--      INICIADA
-- ============================================================================
IF @in_operacion = 'VSI'
BEGIN
	SELECT COUNT(*) AS contador, 
	CASE COUNT(*) WHEN 0 THEN 'N' ELSE 'S' END AS sesion_iniciada
	FROM TB_GEN_SESIONES
	WHERE id_usuario = @in_id_usuario
	AND estado_sesion = 'A'
END

-- ============================================================================
-- VSV: VERIFICAR SESION VALIDA, VERIFICA SI LA SESION DEL USUARIO ES VALIDA
-- ============================================================================
IF @in_operacion = 'VSV'
BEGIN
	SELECT COUNT(*) AS contador, 
	CASE COUNT(*) WHEN 0 THEN 'N' ELSE 'S' END AS sesion_valida
	FROM TB_GEN_SESIONES s INNER JOIN dbo.VW_USUARIOS_PERFILES u ON 
	s.id_usuario = u.id_usuario
	WHERE s.id_sesion = @in_id_sesion
	AND s.estado_sesion = 'A'
	AND u.estado_usuario = 'A'
END

-- ============================================================================
-- VSP: VERIFICAR SESION PERMISO, VERIFICA SI LA SESION DEL USUARIO ES VALIDA,
--      SI ES VALIDA, SE VERIFICA SI EL USUARIO TIENE LOS PERMISOS VALIDOS PARA
--      INGRESAR EN LA OPCION.
-- ============================================================================
IF @in_operacion = 'VSP'
BEGIN
	CREATE TABLE #tmp
	(
		contador INT,
		sesion_valida CHAR(1)
	)

	INSERT INTO #tmp(contador, sesion_valida)
	EXEC SP_GEN_SESION
	@in_id_sesion = @in_id_sesion,
	@in_operacion = 'VSV' 

	IF (SELECT sesion_valida
		FROM #tmp) = 'S'
	BEGIN	
		SELECT *,
		CASE contador WHEN 0 THEN 'N' ELSE 'S' END AS ok,
		CASE contador WHEN 0 THEN 'Atención no tiene los permisos necesarios para acceder a esta opción' ELSE 'Acceso concedido' END AS mensaje
		FROM (
				SELECT COUNT(*) AS contador
				FROM dbo.VW_PERMISOS p INNER JOIN dbo.VW_USUARIOS_PERFILES u ON
				p.id_perfil = u.id_perfil
				WHERE u.id_usuario = @in_id_usuario
				AND p.id_menu = @in_id_menu				
				AND p.acceso = 'S'
				AND p.estado_permiso = 'A'
				AND p.estado_perfil = 'A'				
				AND p.estado_menu = 'A'	
				AND u.estado_usuario = 'A'			
			) c			
	END	
	ELSE
	BEGIN
		SELECT 'N' AS ok, 'Atención la sesión fue cerrada y no es válida, por favor salga del sistema y vuelva a ingresar...' AS mensaje
	END	
	
	DROP TABLE #tmp
END

-- ============================================================================
-- I: INGRESAR SESION, SE INGRESA UNA NUEVA SESION PARA EL USUARIO, SE CIERRAN
--    TODAS LAS SESIONES QUE EL USUARIO HAYA TENIDO ABIERTAS
-- ============================================================================
IF @in_operacion = 'I'
BEGIN
-- SE CIERRAN TODAS LAS SESIONES QUE EL USUARIO TENGA ABIERTAS
	EXEC SP_GEN_SESION
	@in_id_usuario = @in_id_usuario,
	@in_operacion = 'CS'
	
-- SE INGRESA LA NUEVA SESION
	INSERT INTO TB_GEN_SESIONES(
		id_usuario, 
		fecha_registro, 
		ip, 
		estado_sesion, 
		fecha_ingreso, 
		id_usuario_ingreso
	)	        
	VALUES(
		@in_id_usuario, 
		getdate(), 
		@in_ip, 
		'A', 
		getdate(), 
		@in_usuario_ing_act
	)	
		
	SET @in_id_sesion = @@IDENTITY
	
	SELECT @in_id_sesion AS id_sesion, 
	id_usuario, 
	login, 
	nombre_apellido, 
	apellido_nombre, 
	id_perfil, 
	descripcion_perfil,
	'S' AS ok, 'INGRESO DE SESION EXITOSO' AS mensaje
	FROM VW_USUARIOS_PERFILES
	WHERE id_usuario = (SELECT id_usuario
					   FROM TB_GEN_SESIONES
					   WHERE id_sesion = @in_id_sesion)
END

-- ============================================================================
-- CS: CIERRE DE SESIONES, CIERRAN TODAS LAS SESIONES QUE EL USUARIO TENGA 
--     ABIERTAS
-- ============================================================================
IF @in_operacion = 'CS'
BEGIN
	UPDATE TB_GEN_SESIONES
	SET estado_sesion = 'C',
		fecha_actualizacion = GETDATE(),
		id_usuario_actualizacion = @in_usuario_ing_act
	WHERE id_usuario = @in_id_usuario
	AND estado_sesion = 'A'		
END

-- ============================================================================
-- CSA: CIERRE DE SESION ACTUAL, CIERRA LA SESION ACTUAL DEL USUARIO 
-- ============================================================================
IF @in_operacion = 'CSA'
BEGIN
	UPDATE TB_GEN_SESIONES
	SET estado_sesion = 'C',
		fecha_actualizacion = GETDATE(),
		id_usuario_actualizacion = @in_usuario_ing_act
	WHERE id_sesion = @in_id_sesion
	
	SELECT 'S' AS ok
END
